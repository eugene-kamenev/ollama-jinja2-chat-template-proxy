{%- macro tools_template(tools) -%}
# Gemma Tool Calling Instructions

Act as an intent analyzer and tool selector. Your task is to:

1. *Analyze the user's request* to determine their goal and intent.
2. *Check if a tool is needed* based on the provided JSON schema of available tools (see below). If no tool applies, respond conversationally.
3. *If a tool is required*:
 - Select the *exact tool name* from the schema that best matches the goal.
 - Extract *all required parameters* from the userâ€™s input. Do not assume defaults unless explicitly allowed by the schema.
 - Return *only a JSON object* formatted as:
```json
[
    {
        "name": "<tool-name>",
        "arguments": <tool-input-args>
    }
]
```
4. *Validation*: Ensure arguments strictly match the schema types/requirements. Never invent arguments or tools.
5. Example interaction:
 - *User*: What's the weather in Tokyo?
 - *Tool schema*: Includes a `getWeather` tool with parameters `location` (string, required) and `unit` (string, optional)
 - *Your Response*:
 ```json
 {"name": "getWeather", "arguments": {"location": "Tokyo", "unit": "celcius" } }
 ```
6. Tool outputs will be returned within `<tool_call_result></tool_call_result>` XML tags. Use the outputs to answer user question in **natural language**.

## Available Tools Definitions:

{% for tool in tools -%}
`{"name": "{{ tool.function.name }}", "description": "{{ tool.function.description }}", "parameters": {{ tool.function.parameters | tojson }}}`
{% endfor -%}
{%- endmacro -%}
{%- macro tool_call_template(function) -%}
{"name": "{{ function['name'] }}", "arguments": {{ function['arguments'] | tojson }}}
{%- endmacro -%}
{{ bos_token }}
{%- set ns = namespace(lastRole='model') -%}
{%- for message in messages -%}
    {%- set role = message['role'] -%}
    {%- if role == 'assistant' -%}
        {%- set role = 'model' -%}
    {%- else -%}
        {%- set role = 'user' -%}
    {%- endif -%}
    {%- if role != ns.lastRole -%}
        {%- if loop.index0 != 0 -%}
            {{ '<end_of_turn>\n' }}
        {%- endif -%}
        {{ '<start_of_turn>' + role + '\n' }}
    {%- else -%}
        {{ '\n---\n' }}
    {%- endif -%}
    {%- if message['role'] == 'tool' -%}
        <tool_call_result>{{ message['content'] }}</tool_call_result>
    {%- elif message['tool_calls'] -%}
        {%- for tool_call in message.tool_calls %}
            {{- tool_call_template(tool_call.function) }}
            {{- '\n' }}
        {%- endfor %}
    {%- elif message['content'] -%}
        {{ message['content'] | trim }}
    {%- endif -%}
    {%- if loop.index0 == 0 and tools -%}
        {{- '\n---\n' + tools_template(tools) + '\n---\n' }}
    {%- endif -%}
    {%- if message['images'] and message['images'] is iterable -%}
        {{ '\n<start_of_image>' }}
        {{ message['images'] | join('<end_of_image>\n<start_of_image>') }}
        {{ '<end_of_image>\n' }}
    {%- endif -%}
    {%- set ns.lastRole = role -%}
{%- endfor -%}
{%- if add_generation_prompt -%}
    {{'<end_of_turn>\n<start_of_turn>model\n'}}
{%- endif -%}